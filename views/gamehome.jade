extends layout

block content
  - var turnOnMenu = game && game.memeplexes[0];
  script.
    var leadersA = new Array(), numSelfFunded = 0;
    var corpsA = new Array();
    var localesA = new Array();
  mixin settingsPageMixin
    a(href='/') Logout
    newGameURL = '/user/' + accountId + '/game/new'
    a(href=newGameURL) New Game
    .multilist
      ul.listgroup

  #sidebar
    if turnOnMenu
      img.memeimage(src="/images/#{game.memeplexes[0].name}memeimage.jpg")
    else
      img.memeimage(src="/images/memewarsmemeimage.jpg")
    if turnOnMenu
      #turnCounter
        p #{game.turn.quarter} #{game.turn.year}
        button End Turn
      ul
        li
          button#expendituresMenu
            p Expenditures
        li
          button#incomeMenu
            p Income
        li
          button#investmentMenu
            p Investments
        li
          button#memeplexesMenu
            p Memeplexes
        li
          button#historyMenu
            p History
        li
          button#settingsMenu
            p Settings

  formUrl = '/user/' + accountId + '/game/' + gameId
  form#content( action=formUrl, method="POST")
    if turnOnMenu
      #resources
        p Resources #{game.memeplexes[0].monetaryUnit} #{turnResources}
        #resourcesProgress
          div
        p#remainingResources #{game.memeplexes[0].monetaryUnit} #{turnResources}
      fieldset#expendituresPage
        #propaganda
          label(for="propaganda") Propaganda
          input(type="range", name="propaganda", max="#{turnResources}", value=game.memeplexes[0].propaganda)
        #investment
          label(for="investment") #{game.memeplexes[0].investmentName}
          input(type="range", name="investment", max="#{turnResources}", value=game.memeplexes[0].investment)
        #leaders.horizontalList
          each leader in game.memeplexes[0].leaders
            script.
              leadersA.push( {name:"#{leader.name}",
                              selffunding:#{leader.selffunding},
                              funded:#{leader.funded},
                              profession:{name:"#{leader.profession.name}",level:#{leader.profession.level}},
                              charisma:#{leader.charisma},
                              community:#{leader.community},
                              management:#{leader.management},
                              race:"#{leader.race}"
                             });
            if leader.selffunding
              script.
                numSelfFunded++;
            .leaderFunding
              if leader.funded
                button.leaderDetailButton(class='fundedLeader')
                  p #{leader.name}
                  input(type="checkbox", name=leader.name, checked='true')
              else
                button.leaderDetailButton
                  p #{leader.name}
                  input(type="checkbox", name=leader.name)
      fieldset#incomePage(class='notShown')
        #corporations
          p#corpTotal Corporations #{corpIncome} #{game.memeplexes[0].monetaryUnit}
          .horizontalList
            each corp in game.memeplexes[0].corps
              script.
                corpsA.push( {name:"#{corp.name}",
                              donation:#{corp.donation},
                              funding:#{corp.funding},
                              influence:#{corp.influence}
                             });
              button.corpDetailButton
                label(for=corp.name) #{corp.name}
                p #{corp.donation} #{game.memeplexes[0].monetaryUnit}
                input(type="range", name=corp.name, value=corp.funding)
        #locales
          p#localeTotal Locales #{localeIncome} #{game.memeplexes[0].monetaryUnit}
          .horizontalList
            each locale,i in game.memeplexes[0].locales
              script.
                localesA.push( {name:"#{locale.name}",
                                funding:#{locale.funding}
                                });
              .localeFunding
                button.localeDetailButton
                  label(for=locale.name) #{locale.name}
                  p #{locale.donation} #{game.memeplexes[0].monetaryUnit}
                  input(type="range", name=locale.name, value=locale.funding)
      fieldset#investmentPage(class='notShown')
        #investmentAreas
          p#investmentTotal #{game.memeplexes[0].investmentName} #{game.memeplexes[0].investment} #{game.memeplexes[0].monetaryUnit}
          each investment in game.memeplexes[0].investments
            button.investmentDetailButton
              p #{investment.name}
              p #{investment.funding} #{game.memeplexes[0].monetaryUnit}
        #propagandaAreas
          p#propagandaTotal Propaganda #{game.memeplexes[0].propaganda} #{game.memeplexes[0].monetaryUnit}
          each item in game.memeplexes[0].propaganda
            button.propagandaDetailButton
              p #{item.name}
              p #{item.funding} #{game.memeplexes[0].monetaryUnit}
      fieldset#memeplexesPage(class='notShown')
        each memeplex in game.memeplexes
          .memeplexItem
            button.memeplexDetailButton
              p #{memeplex.name}
      fieldset#historyPage(class='notShown')
    if turnOnMenu
      fieldset#settingsPage(class='notShown')
        mixin settingsPageMixin
    else
      fieldset#settingsPage
        mixin settingsPageMixin

  script.
    $(document).ready( function() {
        // menu
        var pageShown = '#expendituresPage';
        var showPage = function( pageToShow) {
            if( pageShown != pageToShow) {
                $(pageShown).addClass('notShown');
                pageShown = pageToShow;
                $(pageShown).removeClass('notShown');
            }
        };
        $('#expendituresMenu').click( function() {showPage('#expendituresPage');});
        $('#incomeMenu').click( function() {showPage('#incomePage');});
        $('#investmentMenu').click( function() {showPage('#investmentPage');});
        $('#memeplexesMenu').click( function() {showPage('#memeplexesPage');});
        $('#historyMenu').click( function() {showPage('#historyPage');});
        $('#settingsMenu').click( function() {showPage('#settingsPage');});
        $('#turnCounter button').click(function() {
            $('form').submit();
        });

        //expendituresPage
        var calculateResources = function() {
            var spent = parseInt($('#propaganda input').val(),10) + parseInt($('#investment input').val(),10);
            var val = (#{turnResources} - spent) * 100 / #{turnResources};
            
            var progress = $('#resourcesProgress div');
            if( val < 0)
                progress.addClass('inDebt');
            else
                progress.removeClass('inDebt');
            progress.css('width',Math.floor(Math.abs(val)) + '%');
        };
        $('.leaderFunding button').click( function(ev) {
            ev.preventDefault();
            
            var i = $(this).children('input');
            var v = i.attr('checked');
            if( v) {
                i.attr('checked',false);
                $(this).removeClass('fundedLeader');
            } else {
                i.attr('checked',true);
                $(this).addClass('fundedLeader');
            }
            
            calculateResources();
        });
        $('#propaganda input').change( function() {calculateResources();});
        $('#investment input').change( function() {calculateResources();});

        //incomePage
        $('.corpDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        $('.localeDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        var lastChanged = -1;
        var adjustCollection = function( collection, max, untouchable) {
            var total = parseInt( untouchable.val(), 10);
            collection.each( function(i,e) {total+=parseInt($(e).val(),10);});

            if(lastChanged >= collection.length)
                lastChanged = -1;

            while( total != max) {
                collection.each( function(i,e) {
                    if(i>lastChanged) {
                        var val = parseInt($(e).val(),10);
                        if( total != max) {
                            lastChanged = (i==(collection.length-1))?lastChanged=-1:i;
                            if( total > max && val > 0) {
                                $(e).val( val - 1);
                                total--;
                            } else if( total < max && val < max) {
                                $(e).val( val + 1);
                                total++;
                            }
                        }
                    }
                });
            }
        };
        $('.localeFunding input').change( function() {
            adjustCollection($('.localeFunding input[name!="' + $(this).attr('name') +'"]'),100, $(this));
        });
        
        //investmentPage
        $('.investmentDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        $('.propagandaDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        
        //memeplexesPage
        $('.memeplexDetailButton').click( function(ev) {
            ev.preventDefault();
        });
    });