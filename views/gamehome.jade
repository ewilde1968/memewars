extends layout

block content
  - var turnOnMenu = game && game.memes[0];
  script.
    var leadersA = new Array(), numSelfFunded = 0;
    var corpsA = new Array();
    var localesA = new Array();
  mixin settingsPageMixin
    a(href='/') Logout
    newGameURL = '/user/' + accountId + '/game/new'
    a(href=newGameURL) New Game
    .multilist
      ul.listgroup

  #sidebar
    if turnOnMenu
      img.memeimage(src="/images/#{game.memes[0].name}memeimage.jpg")
    else
      img.memeimage(src="/images/memewarsmemeimage.jpg")
    if turnOnMenu
      #turnCounter
        p #{game.turns[0].quarter} #{game.turns[0].year}
        button End Turn
      ul
        li
          button#expendituresMenu
            p Expenditures
        li
          button#incomeMenu
            p Income
        if game && game.memes[0]
          li
            button#investmentMenu
              p #{game.memes[0].investmentName}
        else
          li
            button#investmentMenu
              p Investments
        li
          button#memesMenu
            p Memes
        li
          button#historyMenu
            p History
        li
          button#settingsMenu
            p Settings

  formUrl = '/user/' + accountId + '/game/' + gameId
  form#content( action=formUrl, method="POST")
    if turnOnMenu
      #income
        label(for="income") Income #{game.memes[0].monetaryUnit} #{game.turns[0].income}
        progress(value="1.0", name="income")
        p#remainingIncome #{game.memes[0].monetaryUnit} #{game.turns[0].income}
      fieldset#expendituresPage
        #propaganda
          label(for="propaganda") Propaganda
          input(type="range", name="propaganda", max=#{game.turns[0].income}, value=game.turns[0].propaganda)
        #investment
          label(for="investment") #{game.memes[0].investmentName}
          input(type="range", name="investment", max=#{game.turns[0].income}, value=game.turns[0].investment)
        #locales.horizontalList
          each locale,i in game.memes[0].locales
            script.
              localesA.push( {name:"#{locale.name}",
                              funding:#{locale.funding}
                              });
            .localeFunding
              button
                label(for=locale.name) #{locale.name}
              input(type="range", name=locale.name, value=locale.funding)
        #leaders.horizontalList
          each leader in game.memes[0].heroes
            script.
              leadersA.push( {name:"#{leader.name}",
                              selffunding:#{leader.selffunding},
                              funded:#{leader.funded}
                             });
              if( #{leader.selffunding})
                  numSelfFunded++;
            .leaderFunding
              button.leaderDetailButton
                p #{leader.name}
                input(type="checkbox", name=leader.name, checked=leader.funded)
      fieldset#incomePage(class='notShown')
        #corporations
          p#corpTotal Corporations #{game.turns[0].corpIncome} #{game.memes[0].monetaryUnit}
          .horizontalList
            each corp in game.memes[0].corps
              button.corpDetailButton
                p #{corp.name}
                p #{corp.donation} #{game.memes[0].monetaryUnit}
        #localeIncomes
          p#localeTotal Locales #{game.turns[0].localeIncome} #{game.memes[0].monetaryUnit}
          .horizontalList
            each locale in game.memes[0].locales
              button.localeDetailButton
                p #{locale.name}
                p #{locale.funding} #{game.memes[0].monetaryUnit}
      fieldset#investmentPage(class='notShown')
        #investmentAreas
          p#investmentTotal #{game.memes[0].investmentName} #{game.turns[0].investment} #{game.memes[0].monetaryUnit}
          each investment in game.memes[0].investments
            button.investmentDetailButton
              p #{investment.name}
              p #{investment.funding} #{game.memes[0].monetaryUnit}
        #propagandaAreas
          p#propagandaTotal Propaganda #{game.turns[0].propaganda} #{game.memes[0].monetaryUnit}
          each item in game.memes[0].propaganda
            button.propagandaDetailButton
              p #{item.name}
              p #{item.funding} #{game.memes[0].monetaryUnit}
      fieldset#memesPage(class='notShown')
        each meme in game.memes
          .memeItem
            button.memeDetailButton
              p #{meme.name}
      fieldset#historyPage(class='notShown')
    if turnOnMenu
      fieldset#settingsPage(class='notShown')
        mixin settingsPageMixin
    else
      fieldset#settingsPage
        mixin settingsPageMixin

  script.
    $(document).ready( function() {
        // menu
        var pageShown = '#expendituresPage';
        var showPage = function( pageToShow) {
            if( pageShown != pageToShow) {
                $(pageShown).addClass('notShown');
                pageShown = pageToShow;
                $(pageShown).removeClass('notShown');
            }
        };
        $('#expendituresMenu').click( function() {showPage('#expendituresPage');});
        $('#incomeMenu').click( function() {showPage('#incomePage');});
        $('#investmentMenu').click( function() {showPage('#investmentPage');});
        $('#memesMenu').click( function() {showPage('#memesPage');});
        $('#historyMenu').click( function() {showPage('#historyPage');});
        $('#settingsMenu').click( function() {showPage('#settingsPage');});

        //expendituresPage
        var lastLocaleChanged = -1;
        var adjustCollection = function(collection,total) {
            collection.each( function(i,e) {
                if( i > lastLocaleChanged) {
                    var val = parseInt($(e).val(),10);
                    if( total != 100) {
                        if( i == (collection.length-1))
                            lastLocaleChanged = -1;
                        else
                            lastLocaleChanged = i;
                        if( total > 100 && val > 0) {
                            $(e).val( val - 1);
                            total--;
                        } else if( total < 100 && val < 100) {
                            $(e).val( val + 1);
                            total++;
                        }
                    }
                }
            });
            
            return total;
        };
        $('.localeFunding input').change( function() {
            var total = parseInt( $(this).val(), 10);
            var collection = $('.localeFunding input[name!="' + $(this).attr('name') +'"]');
            collection.each( function(i,e) {total+=parseInt($(e).val(),10);});
            
            while( total != 100)
                total = adjustCollection(collection,total);
        });
        $('.localeFunding button').click( function(ev) {
            ev.preventDefault();
        });

        $('.leaderFunding button').click( function(ev) {
            ev.preventDefault();
            
            var i = $(this).children('input');
            var v = i.attr('checked');
            if( v) {
                i.attr('checked',false);
                $(this).removeClass('fundedLeader');
            } else {
                i.attr('checked',true);
                $(this).addClass('fundedLeader');
            }
        });


        //incomePage
        $('.corpDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        $('.localeDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        
        //investmentPage
        $('.investmentDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        $('.propagandaDetailButton').click( function(ev) {
            ev.preventDefault();
        });
        
        //memePage
        $('.memeDetailButton').click( function(ev) {
            ev.preventDefault();
        });
    });